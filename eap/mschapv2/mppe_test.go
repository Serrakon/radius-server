package mschapv2

import (
	"testing"

	"github.com/stretchr/testify/assert"
)

func TestRFC3079_3_5_3(t *testing.T) {
	passwordHash := NtPasswordHash("clientPass")
	assert.Equal(t, []byte{
		0x44, 0xEB, 0xBA, 0x8D, 0x53, 0x12, 0xB8, 0xD6, 0x11, 0x47, 0x44, 0x11, 0xF5, 0x69, 0x89, 0xAE,
	}, passwordHash)

	passwordHashHash := HashNtPasswordHash(passwordHash)
	assert.Equal(t, []byte{
		0x41, 0xC0, 0x0C, 0x58, 0x4B, 0xD2, 0xD9, 0x1C, 0x40, 0x17, 0xA2, 0xA1, 0x2F, 0xA5, 0x9F, 0x3F,
	}, passwordHashHash)

	ntResponse := []byte{
		0x82, 0x30, 0x9E, 0xCD, 0x8D, 0x70, 0x8B, 0x5E, 0xA0, 0x8F, 0xAA, 0x39, 0x81, 0xCD, 0x83,
		0x54, 0x42, 0x33, 0x11, 0x4A, 0x3D, 0x85, 0xD6, 0xDF,
	}

	masterKey := GetMasterKey(passwordHashHash, ntResponse)
	assert.Equal(t, []byte{
		0xFD, 0xEC, 0xE3, 0x71, 0x7A, 0x8C, 0x83, 0x8C, 0xB3, 0x88, 0xE5, 0x27, 0xAE, 0x3C, 0xDD, 0x31,
	}, masterKey)

	sendStartKey := GetAsymmetricStartKey(masterKey, 16, true, true)
	assert.Equal(t, []byte{
		0x8B, 0x7C, 0xDC, 0x14, 0x9B, 0x99, 0x3A, 0x1B, 0xA1, 0x18, 0xCB, 0x15, 0x3F, 0x56, 0xDC, 0xCB,
	}, sendStartKey)
}
